name: run_tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  run_tests:

    runs-on: ubuntu-latest

    steps:
     - uses: actions/checkout@master
     - uses: actions/setup-python@v1
       with:
         python-version: '3.9'
         architecture: 'x64'
     - name: Install requirements
       run: pip install -r requirements.txt
     - name: Run tests
       run: python -m pytest ./tests

  build_and_pub:
    needs: [ run_tests ]
    runs-on: [ ubuntu-latest ]
    env:
      LOGIN: ${{ secrets.DOCKER_LOGIN }}
      NAME: ${{ secrets.DOCKER_NAME }}
    steps:
      - name: Login to docker.io
        run: echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@master
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11} -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}

  release-build:
    needs: [ run_tests ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build
          python -m build

      - name: upload windows dists
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    needs:
      - release-build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/jwostik-pipeliner
    permissions:
      id-token: write
    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1